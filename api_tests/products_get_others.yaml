# ********RoostGPT********

# Test generated by RoostGPT for test amanRestAssured using AI Type  and AI Model 
# 
# Test generated for /products_get for http method type GET in artillery framework
# RoostTestHash=62232e7786
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "products_get_others.csv"
    fields:
      - "productId"
    skipHeader: true
    delimiter: "^|^"
  environments:
    development:
      target: "{{ $processEnvironment.API_HOST }}"
      headers:
        Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"

scenarios:
  - name: "Non-success API responses"
    flow:
      - log: "Sending invalid GET request to /products"
      - get:
          url: "/invalid/products"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Sending GET request to /products without authorization"
      - get:
          url: "/products"
          headers:
            Authorization: ""
          expect:
            - statusCode: 401
      - think: 1

      - log: "Sending POST request to /products without payload"
      - post:
          url: "/products"
          headers:
            Content-Type: "application/json"
          json:
            productId: ""
          expect:
            - statusCode: 400
      - think: 1

      - log: "Sending POST request to /products with invalid payload"
      - post:
          url: "/products"
          headers:
            Content-Type: "application/json"
          json:
            productId: "invalid_id"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Sending DELETE request to /products with nonexistent product id"
      - delete:
          url: "/products/{{ productId }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Sending PUT request to /products with nonexistent product id"
      - put:
          url: "/products/{{ productId }}"
          headers:
            Content-Type: "application/json"
          json:
            productId: "nonexistent_id"
          expect:
            - statusCode: 404
      - think: 1
